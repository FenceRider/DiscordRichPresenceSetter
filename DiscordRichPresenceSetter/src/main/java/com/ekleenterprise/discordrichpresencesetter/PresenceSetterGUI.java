package com.ekleenterprise.discordrichpresencesetter;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;
import net.arikia.dev.drpc.DiscordRichPresence;


public class PresenceSetterGUI extends javax.swing.JFrame {

    /**
     * Creates new form PresenceSetterGUI
     */
    public PresenceSetterGUI() {
        initComponents();
        this.loadProperties();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        Subtext1 = new javax.swing.JTextField();
        Subtext2 = new javax.swing.JTextField();
        apply = new javax.swing.JButton();
        party_currentCount = new javax.swing.JTextField();
        party_maxCount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        noparty = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        picDisplayText = new javax.swing.JTextField();
        picID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        AppID = new javax.swing.JTextField();
        save = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Subtext1.setText("Change these values");
        Subtext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Subtext1ActionPerformed(evt);
            }
        });

        Subtext2.setText("to whatever you want!");
        Subtext2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Subtext2ActionPerformed(evt);
            }
        });

        apply.setText("Apply");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        jLabel1.setText("Party");

        jLabel2.setText("Current#");

        jLabel3.setText("Max");

        noparty.setText("No Party");
        noparty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nopartyActionPerformed(evt);
            }
        });

        jLabel4.setText("Pic ID");

        jLabel5.setText("Display Text");

        picDisplayText.setText("Ekle Enterprise");

        picID.setText("eklelogo2_png");

        jLabel6.setText("App ID");

        AppID.setText("477605011732299776");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AppID)
                    .addComponent(Subtext2)
                    .addComponent(Subtext1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(party_currentCount, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(party_maxCount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apply))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(picID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(picDisplayText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noparty)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Subtext1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Subtext2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(noparty))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(party_maxCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(party_currentCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(picDisplayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(picID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AppID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apply)
                    .addComponent(save))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String c_appID = "INVALID";
    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
        // TODO add your handling code here:
        if (!c_appID.equals(AppID.getText())) {
            //re-init
            c_appID = AppID.getText();
            DiscordRichPresenceSetter.init_api(c_appID);
            System.out.println("re-init app");
            AppID.setEditable(false);

        }

        DiscordRichPresence rich
                = new DiscordRichPresence.Builder(Subtext2.getText()).
                        setDetails(Subtext1.getText())
                        .setBigImage(picID.getText(), picDisplayText.getText())
                        .build();
        if (!noparty.isSelected()) {
            try {
                rich.partyMax = Integer.parseInt(party_maxCount.getText());
                rich.partySize = Integer.parseInt(party_currentCount.getText());
                rich.partyId = "";
            } catch (Exception e) {
                rich.partyMax = 0;
                rich.partySize = 0;
                rich.partyId = null;
                noparty.setSelected(true);
            }
        }
        DiscordRichPresenceSetter.updateFromGUI(rich);

    }//GEN-LAST:event_applyActionPerformed

    private void Subtext2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Subtext2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Subtext2ActionPerformed

    private void nopartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nopartyActionPerformed


    }//GEN-LAST:event_nopartyActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try (OutputStream output = new FileOutputStream("config.properties")) {

            Properties prop = new Properties();

            // set the properties value
            prop.setProperty("text1", this.Subtext1.getText());
            prop.setProperty("text2", this.Subtext2.getText());
            prop.setProperty("party_current", this.party_currentCount.getText());
            prop.setProperty("party_max", this.party_maxCount.getText());
            prop.setProperty("no_party", Boolean.toString(this.noparty.isSelected()));
            prop.setProperty("pic_id", this.picID.getText());
            prop.setProperty("display_text", this.picDisplayText.getText());
            prop.setProperty("app_id", this.c_appID);
            
            prop.store(output, null);
            System.out.println("writing " + prop + "\n to config.properties");

        } catch (IOException io) {
            io.printStackTrace();
        }

    }//GEN-LAST:event_saveActionPerformed

    private void Subtext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Subtext1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Subtext1ActionPerformed

    private void loadProperties(){
        try (InputStream input = new FileInputStream("config.properties")) {

            Properties prop = new Properties();
            prop.load(input);
            // set the properties value
            this.Subtext1.setText(prop.getProperty("text1"));
            this.Subtext2.setText(prop.getProperty("text2"));
            this.party_currentCount.setText(prop.getProperty("party_current"));
            this.party_maxCount.setText(prop.getProperty("party_max"));
            this.noparty.setSelected(Boolean.parseBoolean(prop.getProperty("no_party")));
            this.picID.setText(prop.getProperty("pic_id"));
            this.picDisplayText.setText(prop.getProperty("display_text"));
            this.AppID.setText(prop.getProperty("app_id"));
            
         
            System.out.println("read " + prop + " from config.properties");
            
        } catch (IOException io) {
            io.printStackTrace();
        }
    
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AppID;
    private javax.swing.JTextField Subtext1;
    private javax.swing.JTextField Subtext2;
    private javax.swing.JButton apply;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JCheckBox noparty;
    private javax.swing.JTextField party_currentCount;
    private javax.swing.JTextField party_maxCount;
    private javax.swing.JTextField picDisplayText;
    private javax.swing.JTextField picID;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
